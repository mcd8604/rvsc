name: "train"

layer {
	name: "input"
	type: "Python"
	top: "data"
	top: "label"
	python_param {
		module: "ModelLayers3Class"
		layer: "InputLayer3Class"
		param_str: "{\'imageNamesFile\': \'train/filenames.txt\', \'inputImageDir\': \'train/images\', \'labelImageDir\': \'train/av\', \'mean\': (171.0773, 98.4333, 58.8811)}"
	}
	include { phase: TRAIN }
}
layer {
	name: "input"
	type: "Input"
	top: "data"
	input_param {
		shape: { 
			dim: 1,
			dim: 3,			
			dim: 584,
			dim: 565
		}
	}
	include { phase: TEST }
}

layer { bottom: 'data' top: 'conv1_1' name: 'conv1_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv1_1' top: 'conv1_1' name: 'relu1_1' type: "ReLU" }
layer { bottom: 'conv1_1' top: 'conv1_2' name: 'conv1_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 64 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv1_2' top: 'conv1_2' name: 'relu1_2' type: "ReLU" }
layer { name: 'pool1' bottom: 'conv1_2' top: 'pool1' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { name: 'conv2_1' bottom: 'pool1' top: 'conv2_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_1' top: 'conv2_1' name: 'relu2_1' type: "ReLU" }
layer { bottom: 'conv2_1' top: 'conv2_2' name: 'conv2_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 128 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv2_2' top: 'conv2_2' name: 'relu2_2' type: "ReLU" }
layer { bottom: 'conv2_2' top: 'pool2' name: 'pool2' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool2' top: 'conv3_1' name: 'conv3_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_1' top: 'conv3_1' name: 'relu3_1' type: "ReLU" }
layer { bottom: 'conv3_1' top: 'conv3_2' name: 'conv3_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_2' top: 'conv3_2' name: 'relu3_2' type: "ReLU" }
layer { bottom: 'conv3_2' top: 'conv3_3' name: 'conv3_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 256 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv3_3' top: 'conv3_3' name: 'relu3_3' type: "ReLU" }
layer { bottom: 'conv3_3' top: 'pool3' name: 'pool3' type: "Pooling"
  pooling_param { pool: MAX kernel_size: 2 stride: 2 } }

layer { bottom: 'pool3' top: 'conv4_1' name: 'conv4_1' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_1' top: 'conv4_1' name: 'relu4_1' type: "ReLU" }
layer { bottom: 'conv4_1' top: 'conv4_2' name: 'conv4_2' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_2' top: 'conv4_2' name: 'relu4_2' type: "ReLU" }
layer { bottom: 'conv4_2' top: 'conv4_3' name: 'conv4_3' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 512 pad: 1 kernel_size: 3 } }
layer { bottom: 'conv4_3' top: 'conv4_3' name: 'relu4_3' type: "ReLU" }


## Prep 1
layer { bottom: 'conv1_2' top: 'conv1_2_16' name: 'conv1_2_16' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 16 pad: 1 kernel_size: 3 weight_filler{ type: "gaussian" std: 0.001}} }
  
## Prep 2
layer { bottom: 'conv2_2' top: 'conv2_2_16' name: 'conv2_2_16' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 16 pad: 1 kernel_size: 3 weight_filler{ type: "gaussian" std: 0.001}} }
  
## Prep 3
layer { bottom: 'conv3_3' top: 'conv3_3_16' name: 'conv3_3_16' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 16 pad: 1 kernel_size: 3 weight_filler{ type: "gaussian" std: 0.001}} }
  
## Prep 4
layer { bottom: 'conv4_3' top: 'conv4_3_16' name: 'conv4_3_16' type: "Convolution"
  param { lr_mult: 1 decay_mult: 1 } param { lr_mult: 2 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 16 pad: 1 kernel_size: 3 weight_filler{ type: "gaussian" std: 0.001}} }
  

### Multiple conv 2 ###
layer { type: "Deconvolution" name: 'upsample2_' bottom: 'conv2_2_16' top: 'side-multi2-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 4 stride: 2 num_output: 16 pad: 1} }
layer { type: "Crop" name: 'crop' bottom: 'side-multi2-up' bottom: 'data' top: 'upside-multi2' }

### Multiple conv 3 ###
layer { type: "Deconvolution" name: 'upsample4_' bottom: 'conv3_3_16' top: 'side-multi3-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 8 stride: 4 num_output: 16 } }
layer { type: "Crop" name: 'crop' bottom: 'side-multi3-up' bottom: 'data' top: 'upside-multi3' }

### Multiple conv 4 ###
layer { type: "Deconvolution" name: 'upsample8_' bottom: 'conv4_3_16' top: 'side-multi4-up'
  param { lr_mult: 0 decay_mult: 1 } param { lr_mult: 0 decay_mult: 0}
  convolution_param { kernel_size: 16 stride: 8 num_output: 16 } }
layer { type: "Crop" name: 'crop' bottom: 'side-multi4-up' bottom: 'data' top: 'upside-multi4' }

### Concat and multiscale weight layer ###
layer { name: "concat" bottom: "conv1_2_16" bottom: "upside-multi2"  bottom: "upside-multi3" bottom: "upside-multi4" top: "concat-upscore" type: "Concat"
  concat_param { concat_dim: 1} }
layer { name: 'new-score-weighting_av' type: "Convolution" bottom: 'concat-upscore' top: 'upscore-fuse'
  param { lr_mult: 0.01 decay_mult: 1 } param { lr_mult: 0.02 decay_mult: 0}
  convolution_param { engine: CAFFE num_output: 3 kernel_size: 1 } }
layer { 
	name: "sigmoid-fuse" type: "SigmoidCrossEntropyLoss" 
	bottom: "upscore-fuse" bottom: "label" top: "sigmoid-fuse" 
	loss_param { ignore_label: 0 }
	include { phase: TRAIN } }
layer {
	name: "sigmoid-fuse" type: "Sigmoid" 
	bottom: "upscore-fuse" top: "sigmoid-fuse" 
	include { phase: TEST } }